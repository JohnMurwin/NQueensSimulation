#   Unity Test Runner
#   Uses: GameCI/TestRunner
#   From: https://game.ci/docs/github/test-runner

name: Unity Test Runner
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  RunTests:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - NQueensSimulation
        testMode:
          - playmode
          - editmode

    steps:
      # First we checkout the project with LFS support (don't need fetch depth here)
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          lfs: true

      # Cache library for future speed for Analysis
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}
          restore-keys: |
            Library-

      # Using GameCI's Unity Test Runner, Run Tests via CLI
      - name: Unity Test Runner via CLI
        uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results

      # Upload Test Results as Artifacts for each testMode matrix
      - name: Upload Results as Artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.testMode }}
          path: ${{ steps.tests.outputs.artifactsPath }}