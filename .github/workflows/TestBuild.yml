#   Continuous Integration Pipeline
#   Uses: SonarCloud, GameCI, UnityTestRunner,
#   From: Mirage, SonarCloud, and Fathom7

name: Test Build
on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  BuildProject:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64 # Build a Windows 64-bit standalone.

    steps:
      # First checkout the repo with both LFS and FetchDepth 0 for full commit
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      
      # Cache project for future speed
      - name: Cache Project Library for next Build
        uses: actions/cache@v2
        with:
          path: NQueensSimulation/Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      
      # Read from file and assign to outputs object
      - name: Version Assignmnet
        id: versionOutput
        run: |
          read -r firstline < ".github/version.txt"
          echo ::set-output name=semVer::$firstline
      
      # Use GameCI to build project with TargetPlatform Matrix
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: NQueensSimulation
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Custom
          version: ${{ steps.versionOutput.outputs.semVer }}
      
      # Upload Build Artifacts *for PR's*
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}